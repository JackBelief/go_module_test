// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hello.proto

package protoes // import "."

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HelloRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_hello_6a8ecf43b88b71b3, []int{0}
}
func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (dst *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(dst, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HelloReplay struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloReplay) Reset()         { *m = HelloReplay{} }
func (m *HelloReplay) String() string { return proto.CompactTextString(m) }
func (*HelloReplay) ProtoMessage()    {}
func (*HelloReplay) Descriptor() ([]byte, []int) {
	return fileDescriptor_hello_6a8ecf43b88b71b3, []int{1}
}
func (m *HelloReplay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloReplay.Unmarshal(m, b)
}
func (m *HelloReplay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloReplay.Marshal(b, m, deterministic)
}
func (dst *HelloReplay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloReplay.Merge(dst, src)
}
func (m *HelloReplay) XXX_Size() int {
	return xxx_messageInfo_HelloReplay.Size(m)
}
func (m *HelloReplay) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloReplay.DiscardUnknown(m)
}

var xxx_messageInfo_HelloReplay proto.InternalMessageInfo

func (m *HelloReplay) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type HelloMessage struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloMessage) Reset()         { *m = HelloMessage{} }
func (m *HelloMessage) String() string { return proto.CompactTextString(m) }
func (*HelloMessage) ProtoMessage()    {}
func (*HelloMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_hello_6a8ecf43b88b71b3, []int{2}
}
func (m *HelloMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloMessage.Unmarshal(m, b)
}
func (m *HelloMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloMessage.Marshal(b, m, deterministic)
}
func (dst *HelloMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloMessage.Merge(dst, src)
}
func (m *HelloMessage) XXX_Size() int {
	return xxx_messageInfo_HelloMessage.Size(m)
}
func (m *HelloMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloMessage.DiscardUnknown(m)
}

var xxx_messageInfo_HelloMessage proto.InternalMessageInfo

func (m *HelloMessage) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type Request struct {
	Input                string   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_hello_6a8ecf43b88b71b3, []int{3}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

type Response struct {
	Output               string   `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_hello_6a8ecf43b88b71b3, []int{4}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "hello.HelloRequest")
	proto.RegisterType((*HelloReplay)(nil), "hello.HelloReplay")
	proto.RegisterType((*HelloMessage)(nil), "hello.HelloMessage")
	proto.RegisterType((*Request)(nil), "hello.Request")
	proto.RegisterType((*Response)(nil), "hello.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HelloGrpcClient is the client API for HelloGrpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelloGrpcClient interface {
	SayHi(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReplay, error)
	GetMsg(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloMessage, error)
}

type helloGrpcClient struct {
	cc *grpc.ClientConn
}

func NewHelloGrpcClient(cc *grpc.ClientConn) HelloGrpcClient {
	return &helloGrpcClient{cc}
}

func (c *helloGrpcClient) SayHi(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReplay, error) {
	out := new(HelloReplay)
	err := c.cc.Invoke(ctx, "/hello.HelloGrpc/SayHi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helloGrpcClient) GetMsg(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloMessage, error) {
	out := new(HelloMessage)
	err := c.cc.Invoke(ctx, "/hello.HelloGrpc/GetMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelloGrpcServer is the server API for HelloGrpc service.
type HelloGrpcServer interface {
	SayHi(context.Context, *HelloRequest) (*HelloReplay, error)
	GetMsg(context.Context, *HelloRequest) (*HelloMessage, error)
}

func RegisterHelloGrpcServer(s *grpc.Server, srv HelloGrpcServer) {
	s.RegisterService(&_HelloGrpc_serviceDesc, srv)
}

func _HelloGrpc_SayHi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloGrpcServer).SayHi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hello.HelloGrpc/SayHi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloGrpcServer).SayHi(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelloGrpc_GetMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloGrpcServer).GetMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hello.HelloGrpc/GetMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloGrpcServer).GetMsg(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelloGrpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hello.HelloGrpc",
	HandlerType: (*HelloGrpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHi",
			Handler:    _HelloGrpc_SayHi_Handler,
		},
		{
			MethodName: "GetMsg",
			Handler:    _HelloGrpc_GetMsg_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hello.proto",
}

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	CommunicateStream(ctx context.Context, opts ...grpc.CallOption) (Chat_CommunicateStreamClient, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) CommunicateStream(ctx context.Context, opts ...grpc.CallOption) (Chat_CommunicateStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/hello.Chat/CommunicateStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatCommunicateStreamClient{stream}
	return x, nil
}

type Chat_CommunicateStreamClient interface {
	Send(*Request) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type chatCommunicateStreamClient struct {
	grpc.ClientStream
}

func (x *chatCommunicateStreamClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatCommunicateStreamClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	CommunicateStream(Chat_CommunicateStreamServer) error
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_CommunicateStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatServer).CommunicateStream(&chatCommunicateStreamServer{stream})
}

type Chat_CommunicateStreamServer interface {
	Send(*Response) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type chatCommunicateStreamServer struct {
	grpc.ServerStream
}

func (x *chatCommunicateStreamServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatCommunicateStreamServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hello.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CommunicateStream",
			Handler:       _Chat_CommunicateStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "hello.proto",
}

func init() { proto.RegisterFile("hello.proto", fileDescriptor_hello_6a8ecf43b88b71b3) }

var fileDescriptor_hello_6a8ecf43b88b71b3 = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x13, 0xd1, 0xa4, 0xe4, 0x82, 0xf8, 0x73, 0x20, 0x54, 0xb1, 0x50, 0xdd, 0x42, 0xa7,
	0x08, 0x05, 0x26, 0xd8, 0xda, 0xa1, 0x5d, 0xba, 0xa4, 0x1b, 0x9b, 0xa9, 0x4e, 0x69, 0xa4, 0x38,
	0x0e, 0xb1, 0x3d, 0xf4, 0xdb, 0xa3, 0x38, 0x0e, 0x50, 0x89, 0xed, 0xfd, 0xce, 0xef, 0xee, 0xfc,
	0x74, 0x90, 0x1e, 0xb8, 0xae, 0x55, 0xd6, 0x76, 0xca, 0x28, 0x8c, 0x1c, 0x10, 0xc1, 0xc5, 0xa6,
	0x17, 0x05, 0x7f, 0x59, 0xd6, 0x06, 0x11, 0x26, 0x8d, 0x90, 0x3c, 0x0b, 0xe7, 0xe1, 0x22, 0x29,
	0x9c, 0xa6, 0x27, 0x48, 0xbd, 0xa7, 0xad, 0xc5, 0x11, 0x67, 0x30, 0x95, 0xac, 0xb5, 0x28, 0x47,
	0xd7, 0x88, 0x34, 0xf7, 0xc3, 0xb6, 0x03, 0xe3, 0x35, 0x9c, 0x49, 0x5d, 0x7a, 0x57, 0x2f, 0xe9,
	0x11, 0xa6, 0xe3, 0xa6, 0x3b, 0x88, 0xaa, 0xa6, 0xb5, 0xc6, 0x3f, 0x0f, 0x40, 0x04, 0xe7, 0x05,
	0xeb, 0x56, 0x35, 0x9a, 0xf1, 0x1e, 0x62, 0x65, 0xcd, 0xaf, 0xc5, 0x53, 0x6e, 0x21, 0x71, 0x6b,
	0xd6, 0x5d, 0xbb, 0xc7, 0x1c, 0xa2, 0x9d, 0x38, 0x6e, 0x2a, 0xbc, 0xcd, 0x86, 0x78, 0x7f, 0xe3,
	0x3c, 0xe0, 0x69, 0xb1, 0xff, 0x3f, 0x05, 0xf8, 0x0a, 0xf1, 0x9a, 0xcd, 0x56, 0x97, 0xff, 0x37,
	0x9d, 0x14, 0x7d, 0x16, 0x0a, 0xf2, 0x25, 0x4c, 0x56, 0x07, 0x61, 0xf0, 0x0d, 0x6e, 0x56, 0x4a,
	0x4a, 0xdb, 0x54, 0x7b, 0x61, 0x78, 0x67, 0x3a, 0x16, 0x12, 0x2f, 0x7d, 0xcf, 0x38, 0xe3, 0xea,
	0x87, 0x87, 0x30, 0x14, 0x2c, 0xc2, 0xe7, 0x70, 0x99, 0x7e, 0x24, 0xd9, 0xbb, 0x3b, 0x00, 0xeb,
	0xcf, 0xd8, 0x89, 0x97, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x81, 0x16, 0x36, 0x98, 0x01,
	0x00, 0x00,
}
